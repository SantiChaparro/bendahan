{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santi\\\\Desktop\\\\proyectos\\\\bendahan\\\\bendahan\\\\client\\\\src\\\\views\\\\Customers\\\\Customers.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCustomers } from \"../../redux/slices/appointments/thunks\";\nimport { Box, Container, Card, Grid } from \"@mui/material\";\n//import {useSatate} from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Customers = () => {\n  _s();\n  const {\n    customers\n  } = useSelector(state => state.customer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCustomers());\n  }, [dispatch]);\n  useEffect(() => {\n    console.log(customers);\n  }, [customers]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      border: 'solid 2px red'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: customers.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: customer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"text.secondary\",\n                children: [\"DNI: \", customer.dni]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"El array est\\xE1 vac\\xEDo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Customers, \"K8dse/XPTpNekaCPtOxuQrXwkoo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","React","useState","useEffect","useSelector","useDispatch","getCustomers","Box","Container","Card","Grid","jsxDEV","_jsxDEV","Customers","_s","customers","state","customer","dispatch","console","log","maxWidth","sx","border","children","length","container","spacing","map","index","item","xs","sm","md","variant","CardContent","Typography","component","name","fileName","_jsxFileName","lineNumber","columnNumber","color","dni","_c","$RefreshReg$"],"sources":["C:/Users/Santi/Desktop/proyectos/bendahan/bendahan/client/src/views/Customers/Customers.jsx"],"sourcesContent":["import { Button,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle } from \"@mui/material\";\r\nimport React, { useState , useEffect} from \"react\";\r\nimport {useSelector , useDispatch  } from 'react-redux'\r\nimport { getCustomers } from \"../../redux/slices/appointments/thunks\";\r\nimport {Box,Container,Card,Grid} from \"@mui/material\";\r\n//import {useSatate} from 'react';\r\n\r\n\r\nconst Customers = ()=>{\r\n\r\n    const {customers} = useSelector(state => state.customer)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n\r\n        dispatch(getCustomers());\r\n\r\n    },[dispatch])\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log(customers);\r\n\r\n    },[customers])\r\n    \r\n   \r\n      \r\n    return (\r\n        \r\n        <Container maxWidth='xl' sx={{\r\n            border: 'solid 2px red'\r\n        }}>\r\n            <Box>\r\n            {customers.length > 0 ? (\r\n                <Grid container spacing={2}>\r\n                    {customers.map((customer, index) => (\r\n                        <Grid item xs={12} sm={6} md={4} key={index}>\r\n                            <Card variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"div\">\r\n                                        {customer.name}\r\n                                    </Typography>\r\n                                    <Typography color=\"text.secondary\">\r\n                                        DNI: {customer.dni}\r\n                                    </Typography>\r\n                                    {/* Agrega más detalles del cliente aquí según tu estructura de datos */}\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            ) : (\r\n                <p>El array está vacío</p>\r\n            )}\r\n            </Box>\r\n        </Container>\r\n        \r\n)}\r\n\r\nexport default Customers; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}