{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santi\\\\Desktop\\\\proyectos\\\\bendahan\\\\bendahan\\\\client\\\\src\\\\views\\\\NewService\\\\NewServiceForm.jsx\",\n  _s = $RefreshSig$();\nimport react, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { FormControl, TextField, Button, Snackbar } from \"@mui/material\";\nimport styles from './NewServiceForm.module.css';\nimport { Container } from \"@mui/system\";\nimport { postNewService, cleanMessages } from \"../../redux/slices/appointments/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  service_name: '',\n  cost: 0\n};\nconst validate = values => {\n  const errors = {};\n  if (!values.service_name) {\n    errors.service_name = 'El campo es requerido';\n  } else if (!/^[a-zA-Z\\s\\u00C0-\\u017F]+$/.test(values.service_name)) {\n    errors.service_name = 'Este campo solo admite letras';\n  }\n  if (!values.cost) {\n    errors.cost = 'El campo es requerido';\n  } else if (!/^\\d+$/.test(values.cost)) {\n    errors.cost = 'Este campo solo admite números';\n  }\n  return errors;\n};\nconst NewServiceForm = () => {\n  _s();\n  const newService = useSelector(state => state.newService.newService);\n  const errorMessage = '';\n  console.log(newService.newService);\n  const dispatch = useDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarType, setSnackbarType] = useState('success');\n  useEffect(() => {\n    if (newService && newService.successMessage || errorMessage) {\n      setSnackbarType(errorMessage ? 'error' : 'success');\n      setSnackbarMessage(errorMessage || newService.successMessage);\n      setOpenSnackbar(true);\n      console.log(newService);\n    }\n    return () => {\n      setOpenSnackbar(false);\n      setSnackbarMessage('');\n      setSnackbarType('success');\n    };\n  }, [newService, errorMessage]);\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n    setSnackbarMessage('');\n    setSnackbarType('success');\n    dispatch(cleanMessages());\n  };\n  const handleSubmit = (values, {\n    resetForm\n  }) => {\n    dispatch(postNewService(values.service_name, values.cost));\n    console.log(values.service_name);\n    console.log(values.cost);\n    resetForm();\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit: handleSubmit,\n    validate\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Servicio\",\n          name: \"service_name\",\n          onChange: formik.handleChange,\n          value: formik.values.service_name,\n          variant: \"outlined\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), formik.errors.service && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: formik.errors.service_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Costo\",\n          name: \"cost\",\n          onChange: formik.handleChange,\n          value: formik.values.cost,\n          variant: \"outlined\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), formik.errors.cost && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: formik.errors.cost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 2000,\n      onClose: handleSnackbarClose,\n      message: snackbarMessage,\n      sx: {\n        backgroundColor: snackbarType === 'success' ? 'green' : 'red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(NewServiceForm, \"5YR5nmoG/lKCm3MbM6OslaSExig=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n_c = NewServiceForm;\nexport default NewServiceForm;\nvar _c;\n$RefreshReg$(_c, \"NewServiceForm\");","map":{"version":3,"names":["react","useState","useEffect","useSelector","useDispatch","useFormik","FormControl","TextField","Button","Snackbar","styles","Container","postNewService","cleanMessages","jsxDEV","_jsxDEV","initialValues","service_name","cost","validate","values","errors","test","NewServiceForm","_s","newService","state","errorMessage","console","log","dispatch","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","snackbarType","setSnackbarType","successMessage","handleSnackbarClose","handleSubmit","resetForm","formik","onSubmit","maxWidth","children","className","formContainer","label","name","onChange","handleChange","value","variant","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","service","error","type","open","autoHideDuration","onClose","message","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Santi/Desktop/proyectos/bendahan/bendahan/client/src/views/NewService/NewServiceForm.jsx"],"sourcesContent":["import react , {useState , useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport { FormControl, TextField, Button ,Snackbar} from \"@mui/material\";\r\nimport styles from './NewServiceForm.module.css'\r\nimport { Container } from \"@mui/system\";\r\nimport { postNewService ,  cleanMessages} from \"../../redux/slices/appointments/thunks\";\r\n\r\nconst initialValues = {\r\n    service_name: '',\r\n    cost:0\r\n}\r\n\r\nconst validate = (values) => {\r\n\r\n    const errors = {};\r\n\r\n    if(!values.service_name){\r\n        errors.service_name = 'El campo es requerido';\r\n    }else if(!/^[a-zA-Z\\s\\u00C0-\\u017F]+$/.test(values.service_name)){\r\n        errors.service_name = 'Este campo solo admite letras';\r\n    }\r\n\r\n    if(!values.cost){\r\n        errors.cost = 'El campo es requerido';\r\n    }else if(!/^\\d+$/.test(values.cost)){\r\n        errors.cost = 'Este campo solo admite números';\r\n    }\r\n\r\n    return errors;\r\n\r\n}\r\n\r\nconst NewServiceForm = () => {\r\n\r\n    const newService = useSelector((state) => state.newService.newService);\r\n    const errorMessage = '';\r\n\r\n    console.log((newService.newService));\r\n\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const [snackbarMessage, setSnackbarMessage] = useState('');\r\n    const [snackbarType, setSnackbarType] = useState('success'); \r\n   \r\n    useEffect(() => {\r\n        if ((newService && newService.successMessage) || errorMessage) {\r\n            setSnackbarType(errorMessage ? 'error' : 'success');\r\n            setSnackbarMessage(errorMessage || newService.successMessage);\r\n            setOpenSnackbar(true);\r\n            console.log(newService)\r\n        }\r\n        return () => {\r\n            setOpenSnackbar(false);\r\n            setSnackbarMessage('');\r\n            setSnackbarType('success');\r\n            \r\n        };\r\n    }, [newService, errorMessage]);\r\n\r\n    const handleSnackbarClose = () => {\r\n        setOpenSnackbar(false);\r\n        setSnackbarMessage('');\r\n        setSnackbarType('success');\r\n        dispatch(cleanMessages())\r\n        \r\n    };\r\n\r\n    const handleSubmit = (values, {resetForm}) => {\r\n       \r\n        dispatch(postNewService(values.service_name,values.cost));\r\n        console.log(values.service_name)\r\n        console.log(values.cost);\r\n        resetForm();\r\n       \r\n        \r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: handleSubmit,\r\n        validate\r\n    });\r\n\r\n\r\n    return(\r\n        <Container maxWidth='xl'>\r\n            <form onSubmit={formik.handleSubmit} className={styles.formContainer}>\r\n                <FormControl>\r\n                    <TextField \r\n                        label='Servicio'\r\n                        name=\"service_name\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.service_name}\r\n                        variant=\"outlined\"\r\n                        sx={{ mb: 2 }} \r\n                    />\r\n                    {formik.errors.service && (\r\n                        <span className={styles.error}>{formik.errors.service_name}</span>\r\n                    )}\r\n\r\n                    <TextField \r\n                        label='Costo'\r\n                        name=\"cost\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.cost}\r\n                        variant=\"outlined\"\r\n                        sx={{ mb: 2 }} \r\n                    />\r\n                    {formik.errors.cost && (\r\n                        <span className={styles.error}>{formik.errors.cost}</span>\r\n                    )}\r\n\r\n                    <Button type=\"submit\" variant=\"contained\">Guardar</Button>\r\n                </FormControl>\r\n            </form>\r\n            <Snackbar\r\n                open={openSnackbar}\r\n                autoHideDuration={2000}\r\n                onClose={handleSnackbarClose}\r\n                message={snackbarMessage}\r\n                sx={{ backgroundColor: snackbarType === 'success' ? 'green' : 'red' }}\r\n            />\r\n        </Container>\r\n    )\r\n\r\n};\r\n\r\nexport default NewServiceForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}